<?xml version="1.0" encoding="UTF-8"?>
<Graph author="nialdarbey" created="Wed May 02 09:25:54 GMT-03:00 2012" guiVersion="3.3.0.M2" id="1335994645779" licenseCode="Unlicensed" licenseType="Unknown" modified="Wed May 02 09:25:54 GMT-03:00 2012" modifiedBy="nialdarbey" name="OrderItemToOrderRequest" revision="1.0" showComponentDetails="false">
<Global>
<Metadata __sourcePath="{}/object" _dataStructure="OBJECT" _id="__id" _type="Input" id="Metadata0">
<Record fieldDelimiter="|" name="OrderItem" recordDelimiter="&#10;" type="delimited">
<Field __artificialType="_id" __systemManaged="true" name="__id" type="string"/>
<Field __sourcePath="{}/object/manufacturer" label="manufacturer" name="manufacturer" type="string"/>
<Field __sourcePath="{}/object/name" label="name" name="name" type="string"/>
<Field __sourcePath="{}/object/productId" label="productId" name="productId" type="string"/>
<Field __sourcePath="{}/object/quantity" label="quantity" name="quantity" type="integer"/>
</Record>
</Metadata>
<Metadata __sourcePath="{}/object" _dataStructure="OBJECT" _id="__id" _type="Output" id="Metadata1">
<Record fieldDelimiter="|" name="OrderRequest" recordDelimiter="&#10;" type="delimited">
<Field __artificialType="_id" __systemManaged="true" name="__id" type="string"/>
<Field __sourcePath="{}/object/name" label="name" name="name" type="string"/>
<Field __sourcePath="{}/object/quantity" label="quantity" name="quantity" type="integer"/>
</Record>
</Metadata>
<Dictionary>
<Entry id="DictionaryEntry0" input="true" name="inputPayload" output="false" type="object"/>
<Entry id="DictionaryEntry1" input="false" name="outputPayload" output="true" type="object"/>
</Dictionary>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="dict:inputPayload" guiHeight="0" guiName="JAVA Reader" guiWidth="0" guiX="20" guiY="20" id="BEAN_READER0" type="BEAN_READER">
<attr name="mapping"><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<Context outPort="0" sequenceField="__id" xpath=".">
  <Mapping cloverField="manufacturer" trim="true" xpath="manufacturer"/>
  <Mapping cloverField="name" trim="true" xpath="name"/>
  <Mapping cloverField="productId" trim="true" xpath="productId"/>
  <Mapping cloverField="quantity" trim="true" xpath="quantity"/>
</Context>
]]></attr>
<attr name="_data_format"><![CDATA[JAVA]]></attr>
<attr name="schema"><![CDATA[<?xml version="1.0" encoding="UTF-8"?><schema-object><typed-object-ref type-ref="com.mulesoft.se.orders.OrderItem"/><typed-object type="int"/><typed-object type="java.lang.String"/><typed-object type="com.mulesoft.se.orders.OrderItem"><typed-object-ref name="manufacturer" type-ref="java.lang.String"/><typed-object-ref name="name" type-ref="java.lang.String"/><typed-object-ref name="productId" type-ref="java.lang.String"/><typed-object-ref name="quantity" type-ref="int"/></typed-object></schema-object>]]></attr>
</Node>
<Node enabled="enabled" fileURL="dict:outputPayload" guiHeight="0" guiName="JAVA Writer" guiWidth="0" guiX="460" guiY="20" id="BEAN_WRITER0" type="BEAN_WRITER">
<attr name="mapping"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<object xmlns:clover="http://www.cloveretl.com/ns/xmlmapping" clover:inPort="0">
  <name>$0.name</name>
  <quantity>$0.quantity</quantity>
</object>]]></attr>
<attr name="_data_format"><![CDATA[JAVA]]></attr>
<attr name="schema"><![CDATA[<?xml version="1.0" encoding="UTF-8"?><schema-object><typed-object-ref type-ref="com.mulesoft.se.samsung.OrderRequest"/><typed-object type="int"/><typed-object type="java.lang.String"/><typed-object type="com.mulesoft.se.samsung.OrderRequest"><typed-object-ref name="name" type-ref="java.lang.String"/><typed-object-ref name="quantity" type-ref="int"/></typed-object></schema-object>]]></attr>
</Node>
<Node enabled="enabled" guiHeight="0" guiName="object_to_object" guiWidth="0" guiX="240" guiY="20" id="REFORMAT0" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$out.0.name = "xxx"+ $in.0.name  + $in.0.name + $in.0.name;
	
	
$out.0.__id=$in.0.__id;
	
	$out.0.quantity=$in.0.quantity;
		return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Edge fromNode="BEAN_READER0:0" guiBendpoints="" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (out)" toNode="REFORMAT0:0"/>
<Edge fromNode="REFORMAT0:0" guiBendpoints="" id="Edge1" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="BEAN_WRITER0:0"/>
</Phase>
</Graph>
